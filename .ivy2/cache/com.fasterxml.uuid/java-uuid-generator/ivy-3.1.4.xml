<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="com.fasterxml.uuid"
		module="java-uuid-generator"
		revision="3.1.4"
		status="release"
		publication="20141216091929"
	>
		<license name="The Apache Software License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0.txt" />
		<description homepage="http://wiki.fasterxml.com/JugHome">
		Java UUID Generator (JUG) is a Java library for generating
Universally Unique IDentifiers, UUIDs (see http://en.wikipedia.org/wiki/UUID).
It can be used either as a component in a bigger application, or as a standalone command line tool.
JUG generates UUIDs according to the IETF UUID draft specification.
JUG supports all 3 official UUID generation methods.
		</description>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__log4j.version>1.2.13</m:properties__log4j.version>
		<m:properties__osgi.private/>
		<m:properties__javac.target.version>1.6</m:properties__javac.target.version>
		<m:properties__osgi.import>*</m:properties__osgi.import>
		<m:properties__version.plugin.javadoc>2.8.1</m:properties__version.plugin.javadoc>
		<m:properties__javac.debuglevel>lines,source,vars</m:properties__javac.debuglevel>
		<m:properties__generatedSourcesDir>${project.build.directory}/generated-sources</m:properties__generatedSourcesDir>
		<m:properties__version.plugin.jar>2.5</m:properties__version.plugin.jar>
		<m:properties__project.reporting.outputEncoding>UTF-8</m:properties__project.reporting.outputEncoding>
		<m:properties__javadoc.maxmemory>1g</m:properties__javadoc.maxmemory>
		<m:properties__project.build.resourceEncoding>UTF-8</m:properties__project.build.resourceEncoding>
		<m:properties__osgi.export>${project.groupId}.*;version=${project.version}</m:properties__osgi.export>
		<m:properties__javac.src.version>1.6</m:properties__javac.src.version>
		<m:properties__version.plugin.bundle>2.5.3</m:properties__version.plugin.bundle>
		<m:properties__version.plugin.replacer>1.5.2</m:properties__version.plugin.replacer>
		<m:properties__version.plugin.surefire>2.17</m:properties__version.plugin.surefire>
		<m:properties__version.plugin.release>2.4.2</m:properties__version.plugin.release>
		<m:properties__maven.build.timestamp.format>yyyy-MM-dd HH:mm:ssZ</m:properties__maven.build.timestamp.format>
		<m:properties__osgi.requiredExecutionEnvironment/>
		<m:properties__osgi.dynamicImport/>
		<m:properties__osgi.versionpolicy>${range;[===,=+);${@}}</m:properties__osgi.versionpolicy>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.3.1|org.apache.maven.plugins__maven-compiler-plugin__3.1|org.codehaus.mojo__build-helper-maven-plugin__null|org.apache.maven.plugins__maven-surefire-plugin__2.17|org.apache.felix__maven-bundle-plugin__2.5.3|org.apache.maven.plugins__maven-jar-plugin__2.5|null__maven-site-plugin__null|org.apache.maven.plugins__maven-scm-plugin__1.9.1|org.apache.maven.plugins__maven-enforcer-plugin__1.3.1|org.apache.maven.plugins__maven-compiler-plugin__3.1|org.codehaus.mojo__build-helper-maven-plugin__null|org.apache.maven.plugins__maven-surefire-plugin__2.17|org.apache.felix__maven-bundle-plugin__2.5.3|org.apache.maven.plugins__maven-jar-plugin__2.5|null__maven-site-plugin__null|org.apache.maven.plugins__maven-scm-plugin__1.9.1|org.apache.maven.plugins__maven-compiler-plugin__3.1|org.apache.maven.plugins__maven-source-plugin__2.1.2|org.apache.maven.plugins__maven-javadoc-plugin__2.8.1|org.apache.felix__maven-bundle-plugin__null|org.apache.maven.plugins__maven-release-plugin__null</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="java-uuid-generator" type="bundle" ext="jar" conf="master"/>
		<artifact name="java-uuid-generator" type="source" ext="jar" conf="sources" m:classifier="sources"/>
		<artifact name="java-uuid-generator" type="javadoc" ext="jar" conf="javadoc" m:classifier="javadoc"/>
	</publications>
	<dependencies>
		<dependency org="log4j" name="log4j" rev="1.2.13" force="true" conf="provided->compile(*),provided(*),runtime(*),master(*)"/>
		<dependency org="junit" name="junit" rev="4.11" force="true" conf="test->runtime(*),master(*)"/>
	</dependencies>
</ivy-module>
